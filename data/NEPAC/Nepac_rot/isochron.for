	PROGRAM ISOCHRON
C		VARIABLES SET UP
	CHARACTER*40 NAME, FILE, ONAME, RNAME
	CHARACTER*1 RCH,SCH
	CHARACTER*3 REFNUM,LTYP
	CHARACTER*2 TYPE
	LOGICAL*1 ARRAY
        VIRTUAL  ROT(999,5) 
        VIRTUAL  IROT(999) 
	COMMON/BLOCK1/ ROTLAT,ROTLO,ROTAN
C		INPUT		
15	CONTINUE
	WRITE(6,*) 'ENTER NAME OF ROTATION FILE'
	READ(5,1)ONAME
1	FORMAT(1A40)
17	CONTINUE
	WRITE(6,*) 'ENTER STYLE A)BY ENTRY'
	WRITE(6,*) '            B)BY TIME'
	READ(5,3)SCH
	IF (SCH.EQ.'A') GO TO 20
	WRITE(6,*) 'ENTER PERIOD'
	READ(5,*) ITIM
	TYPE*, 'ENTER STARTING TIME (YOUNGEST), AND ENDING TIME'
	READ(5,*) INIT,IFINT
	IDUR=IABS(INIT-IFINT)
	INUM=INIT/ITIM
4	FORMAT(2I3)
20	CONTINUE
	WRITE(6,*) 'ENTER PLATE IDS OF PAIR IN RELATIVE MOTION'
	READ(5,*) ID1,ID2
23	CONTINUE
	TYPE*, 'ENTER NAME OF RIDGE FILE'
	READ(5,1)RNAME
24	CONTINUE
	WRITE(6,*) 'ENTER NAME OF FILE TO BE CREATED'
	READ(5,1)FILE
	OPEN(UNIT=2,NAME=FILE,TYPE='NEW')
	TYPE*, 'ENTER REFERENCE NUMBER (3 DIGITS)'
	READ(5,361)REFNUM
361	FORMAT(1A3)
	TYPE*, 'ENTER SEQUENCE NUMBER (UP TO 4 DIGITS)'
	ACCEPT*, NEWSEQ
	TYPE*, 'ENTER PLATE ID NUMBER (SHOULD BE ONE OF TWO ABOVE)'
	ACCEPT*, ID
	TYPE*, 'ENTER FINAL TIME'
	TYPE*, '(MOST RECENT)'
	ACCEPT*, IT2
C		PROCESSING BEGINS
	IF (SCH.EQ.'B') GO TO 50
25	CONTINUE
	OPEN(UNIT=3,NAME=ONAME,TYPE='OLD',ERR=15)
27	CONTINUE
	OPEN(UNIT=4,NAME=RNAME,TYPE='OLD')
29	CONTINUE
	READ(3,*,END=35)PID,TIME,ROTLAT,ROTLO,ROTAN,IREF	
	IF (((PID.EQ.ID1).AND.(IREF.EQ.ID2)).OR.
     * ((PID.EQ.ID2).AND.(IREF.EQ.ID1))) GO TO 30
	GO TO 29
30	CONTINUE
	FAC=1.000
	IF (ID.EQ.PID) FAC=-1.000
	ROTAN=(ROTAN/2)*FAC
31	CONTINUE
	IT1=IFIX(TIME)
	IT2=0
	FAC=1.000
	INC=200
	TYPE='IC'
	LTYP='000'
	ICOL=7
       WRITE(2,1004)REFNUM,NEWSEQ,ID,INC,
     *IT1,IT2,TYPE,LTYP,ICOL
	NEWSEQ=NEWSEQ+1
1004       FORMAT(1X,1A3,1I4,1X,1I3,3(1X,1I3),1X,1A2,1X,1A3,
     *1X,1I1)
	IPEN=3
33	CONTINUE
	READ(4,1006,END=36)ARRAY
32	CONTINUE
	READ(4,2,END=36) ALAT,ALONG,IPEN
C	READ(4,*,END=36) ALAT,ALONG,IPEN
	IF (ALAT.EQ.99.00) GO TO 33
	CALL ROTATE(ALAT,ALONG,FLAT,FLONG)
	WRITE(2,2)FLAT,FLONG,IPEN
2	FORMAT(F7.2,F7.2,I3)
	IPEN=2
	GO TO 32
36	CONTINUE
	WRITE(2,2)99.00,99.00,3
	CLOSE(UNIT=4)
	GO TO 27
35	CONTINUE
	CLOSE(UNIT=3)
	CLOSE(UNIT=2)
	CLOSE(UNIT=4)
	GO TO 90
CCCCCC
CCCCCC	PERIODIC ROTATIONS USED
CCCCCC
50	CONTINUE
	IF (INIT.NE.0) GO TO 150
	OPEN(UNIT=3,NAME=ONAME,TYPE='OLD')
	ICNT=0
	TIM=ITIM*ICNT
52	CONTINUE
	OPEN(UNIT=4,NAME=RNAME,TYPE='OLD')
54	CONTINUE
	PIDO=PID
	TIMEO=TIME
	RLATO=RRLAT
	RLONO=RRLON
	RANGO=RRANG
	IREFO=IREF
	READ(3,*,END=65)PID,TIME,RRLAT,RRLON,RRANG,IREF	
	RRANG=RRANG/2
	IF ((PID.EQ.ID1).AND.(IREF.EQ.ID2).OR.(PID.EQ.ID2).AND.
     * (IREF.EQ.ID1)) GO TO 55
	GO TO 54
55	CONTINUE
	IF (TIM.GT.IDUR) GO TO 65
	IF (TIME.LT.TIM) GO TO 54
	ROTLAT=RRLAT
	ROTLO=RRLON
	ROTAN=RRANG
	IF (TIME.EQ.TIM) GO TO 62
	RANGN=-RANGO
	CALL ADDER(RLATO,RLONO,RANGN,RRLAT,RRLON,RRANG,TLAT,TLON,TANG)
	DEL=(TIM-TIMEO)/(TIME-TIMEO)
	TANG=TANG*DEL
	CALL ADDER(RLATO,RLONO,RANGO,TLAT,TLON,TANG,
     * ROTLAT,ROTLO,ROTAN)
62	CONTINUE
	FAC=1.000
	IF (ID.EQ.PID) FAC=-1.000
	ROTAN=ROTAN*FAC
	TYPE*,'ROTATION POLE', ROTLAT,ROTLO,ROTAN
59	CONTINUE
	IT1=IFIX(TIM)
	IT2=0
	FAC=1.00
	INC=200
	TYPE='IC'
	LTYP='000'
	ICOL=7
       WRITE(2,1004)REFNUM,NEWSEQ,ID,INC,
     *IT1,IT2,TYPE,LTYP,ICOL
	NEWSEQ=NEWSEQ+1
	IPEN=3
63	CONTINUE
	READ(4,1006,END=64)ARRAY
1006	FORMAT(34A1)
60	CONTINUE
	READ(4,*,END=64)ALAT,ALONG,IPEN
	IF(ALAT.EQ.99.00) GO TO 63
	CALL ROTATE(ALAT,ALONG,FLAT,FLONG)
	WRITE(2,2)FLAT,FLONG,IPEN
	IPEN=2
	GO TO 60
64	CONTINUE
	ICNT=ICNT+1
	TIM=ITIM*ICNT
	CLOSE(UNIT=4)
	WRITE(2,2)99.00,99.00,3
	OPEN(UNIT=4,NAME=RNAME,TYPE='OLD')
	IF ((TIM.LT.TIME).AND.(TIM.GT.TIMEO)) GO TO 55
	GO TO 52
65	CONTINUE
	CLOSE(UNIT=3)
	CLOSE(UNIT=2)
	CLOSE(UNIT=4)
	GO TO 90
CCCCC	IF INIT NOT 0
150	CONTINUE
	OPEN(UNIT=3,NAME=ONAME,TYPE='OLD')
	ICNT=INUM+1
	TIM=ITIM*ICNT
152	CONTINUE
	OPEN(UNIT=4,NAME=RNAME,TYPE='OLD')
154	CONTINUE
	PIDO=PID
	TIMEO=TIME
	RLATO=RRLAT
	RLONO=RRLON
	RANGO=RRANG
	IREFO=IREF
	READ(3,*,END=165)PID,TIME,RRLAT,RRLON,RRANG,IREF	
	RRANG=RRANG/2
	IF (TIME.LE.INIT) GO TO 154
	IF ((PID.EQ.ID1).AND.(IREF.EQ.ID2).OR.(PID.EQ.ID2).AND.
     * (IREF.EQ.ID1)) GO TO 155
	GO TO 154
155	CONTINUE
	TYPE*, 'OLD TOTAL ROTATION FOR',TIMEO
	TYPE*, RLATO,RLONO,RANGO
	TYPE*, 'NEW TOTAL ROTATION FOR',TIME
	TYPE*, RRLAT,RRLON,RRANG
	IF (TIM.GT.IFINT) GO TO 165
	RANGN=-RANGO
	CALL ADDER(RLATO,RLONO,RANGN,RRLAT,RRLON,RRANG,TLAT,TLON,TANG)
	TYPE*, 'COMPLETE STAGE ROTATION '
	TYPE*, TLAT,TLON,TANG
CCCC	IF TIME GT TIM
	IF (TIME.GE.TIM) TYPE*,'SHOULD ROTATE NEXT'
	IF (TIME.GE.TIM) DEL=(TIM-TIMEO)/(TIME-TIMEO)
CCCC	IF TIME LT TIM
	IF (TIME.LT.TIM) TYPE*, 'SHOULD READ AGAIN'
	IF (TIME.LT.TIM) DEL=(TIME-(TIM-ITIM))/(TIME-TIMEO)
	TANG1=TANG*DEL
	TYPE*, 'PARTIAL ROTATION TO BE ADDED'
	TYPE*, TLAT, TLON, TANG1
	CALL ADDER(TLATO,TLONO,TANGO,TLAT,TLON,TANG1,
     * ROTLAT,ROTLO,ROTAN)
	TYPE*, 'SO NEW TOTAL ROTATION IS'
	TYPE*, ROTLAT,ROTLO,ROTAN
	TLATO=ROTLAT
	TLONO=ROTLO
	TANGO=ROTAN
	IF ((TIM.LT.TIME).AND.(TIM.GT.TIMEO)) GO TO 155
	IF (TIM.GT.TIME) GO TO 154
	TYPE*, 'NOW READY TO ROTATE RIDGE'
162	CONTINUE
	FAC=1.000
	IF (ID.EQ.PID) FAC=-1.000
	ROTAN=ROTAN*FAC
	TYPE*,'ROTATION POLE= ', ROTLAT,ROTLO,ROTAN,'TIME= ',TIM
159	CONTINUE
	IT1=IFIX(TIM)
	IT2=0
	FAC=1.00
	INC=200
	TYPE='IC'
	LTYP='000'
	ICOL=7
       WRITE(2,1004)REFNUM,NEWSEQ,ID,INC,
     *IT1,IT2,TYPE,LTYP,ICOL
	NEWSEQ=NEWSEQ+1
	IPEN=3
163	CONTINUE
	READ(4,1006,END=164)ARRAY
160	CONTINUE
	READ(4,*,END=164)ALAT,ALONG,IPEN
	IF(ALAT.EQ.99.00) GO TO 163
	CALL ROTATE(ALAT,ALONG,FLAT,FLONG)
	WRITE(2,2)FLAT,FLONG,IPEN
	IPEN=2
	GO TO 160
164	CONTINUE
	ICNT=ICNT+1
	TIM=ITIM*ICNT
	CLOSE(UNIT=4)
	WRITE(2,2)99.00,99.00,3
	OPEN(UNIT=4,NAME=RNAME,TYPE='OLD')
	IF ((TIM.LT.TIME).AND.(TIM.GT.TIMEO)) GO TO 155
	GO TO 152
165	CONTINUE
	CLOSE(UNIT=3)
	CLOSE(UNIT=2)
	CLOSE(UNIT=4)
90	CONTINUE	
	WRITE(6,*) '        A)NEW OUTPUT FILE (ONE OF SAME IDS)'
	WRITE(6,*) '        B)NEW RIDGE FILE (ONE OF SAME IDS)'
	WRITE(6,*) '        C)NEW PAIR OF PLATE IDS'
	WRITE(6,*) '        D)NEW STYLE'
	WRITE(6,*) '        E)NEW ROTATION FILE'
	WRITE(6,*) '        F)QUIT'
	READ(5,3)RCH	
3	FORMAT(1A1)
	IF (RCH.EQ.'A') GO TO 24
	IF (RCH.EQ.'B') GO TO 23
	IF (RCH.EQ.'C') GO TO 20
	IF (RCH.EQ.'D') GO TO 17
	IF (RCH.EQ.'E') GO TO 15 
	STOP
	END
	SUBROUTINE ROTATE  (ALAT,ALONG,ANLAT,ANLONG) 
        COMMON/BLOCK1/ROTLAT,ROTLO,ROTAN
	IF(ALAT.EQ.90.0) ALAT=89.9 
	IF(ALAT.EQ.-90.0) ALAT=-89.9 
	D=3.14159/180.0 
10	CONTINUE 
	A1=90.0*D-ALAT*D 
	SINA1=SIN(A1) 
	A2=ALONG*D 
	PX=SINA1*COS(A2) 
	PY=SINA1*SIN(A2) 
	PZ=COS(A1) 
	A3=90.0*D-ROTLAT*D 
	SINA3=SIN(A3) 
	A4=ROTAN*D 
	COSA4=COS(A4) 
	SINA4=SIN(A4) 
	A5=ROTLO*D 
	SINA5=SIN(A5) 
	COSA5=COS(A5) 
	GX=SINA3*COSA5 
	GY=SINA3*SINA5 
	GZ=COS(A3) 
	VCT=(PX*GX)+(PY*GY)+(PZ*GZ) 
	RX=COSA4*PX+(1.0-COSA4)*VCT*GX+ 
     1SINA4*(GY*PZ-GZ*PY) 
	RY=COSA4*PY+(1.0-COSA4)*VCT*GY+ 
     1SINA4*(GZ*PX-GX*PZ) 
	RZ=COSA4*PZ+(1.0-COSA4)*VCT*GZ+ 
     1SINA4*(GX*PY-GY*PX) 
C	IF(RZ.EQ.1.0) GO TO 20 
	IF(SQRT(1.0-RZ*RZ).EQ.0.0) GOTO 20 
	ASIN=ATAN(RZ/SQRT(1.0-RZ*RZ)) 
	ACOS=((3.14159/2.0-ASIN)*57.29578) 
	GO TO 30 
  20	CONTINUE 
	ACOS=0.0 
   30	ANLAT=90.0-ACOS 
	ANLONG=90.0-(ATAN2(RX,RY)*57.29578) 
	IF(ANLONG.GT.180.0) ANLONG=ANLONG-360.0 
999	CONTINUE 
C  999	TYPE 500 
C  500	FORMAT(' ALL DONE') 
	RETURN 
	END 
	SUBROUTINE ADDER(A1,P1,T1,A2,P2,T2,AMT,PHIT,THETT)
C     TAKEN FROM ROFN3
C     PROGRAM TO CALCULATE SUMS OF FINITE ROTATIONS.  GIVEN FIRST AND
C     SECOND ROTATIONS, PROGRAM WILL CALCULATE COMPOSITE ROTATION.
C     SCRIPPS INSTITUTE REFERENCE 70-30 JEAN FRANCHETEAU, PALEOMAGNETISM
C     AND PLATE TECTONICS.
C     PROGRAM BY LADD AUG 71. USED WITH PERMISSION.
C
C     POSITIVE ROTATION ANGLES ARE RELATED TO THEIR RESPECTIVE POLES BY
C     THE RIGHT HAND RULE WITH THUMB POINTING OUT OF SPHERE AT POLE.
C     ANGULAR ROTATION MUST BE LESS THAN 180 DEGREES.
C     INPUT LAT AND LONG OF ROTATION POLE PLUS ANGULAR ROTATION FOR FIRST
C     AND SECOND ROTATIONS.
C
C
C     CONVERT DEGREES TO RADIANS
C     PICK THE END OF THE ROTATION AXIS THAT WILL MAKE THE ROTATION ANGLE
C     POSITIVE AND LESS THAN 180. DEGREES.
    2 X=3.14159265358979
      CONST=X/180.
	IF(T1.EQ.0.0)THEN
	AMT=A2
	PHIT=P2
	THETT=T2
	RETURN
	END IF
	IF(T2.EQ.0.0)THEN
	AMT=A1
	PHIT=P1
	THETT=T1
	RETURN
	END IF
      AM1=A1*CONST
      PHI1=P1*CONST
      THET1=T1*CONST
      IF(THET1)21,22,22
   21 THET1=-THET1
      AM1=-AM1
      PHI1=PHI1+X
      GO TO 24
   22 IF(X-THET1)23,24,24
   23 THET1=2.*X-THET1
      AM1=-AM1
      PHI1=PHI1+X
   24 AM2=A2*CONST
      PHI2=P2*CONST
      THET2=T2*CONST
      IF(THET2)31,32,32
   31 THET2=-THET2
      AM2=-AM2
      PHI2=PHI2+X
      GO TO 34
   32 IF(X-THET2)33,34,34
   33 THET2=2.*X-THET2
      AM2=-AM2
      PHI2=PHI2+X
C
C     CALCULATE COLATITUDE
   34 AM1C=(X/2.)-AM1
      AM2C=(X/2.)-AM2
C
C     CALCULATE CAYLEY-KLEIN PARAMETERS
   40 OMEG1=COS(THET1/2.)
      XI1=SIN(THET1/2.)*SIN(AM1C)*COS(PHI1)
      ETA1=SIN(THET1/2.)*SIN(AM1C)*SIN(PHI1)
      ZETA1=SIN(THET1/2.)*COS(AM1C)
      OMEG2=COS(THET2/2.)
      XI2=SIN(THET2/2.)*SIN(AM2C)*COS(PHI2)
      ETA2=SIN(THET2/2.)*SIN(AM2C)*SIN(PHI2)
      ZETA2=SIN(THET2/2.)*COS(AM2C)
C
C     MATRIX ROTATION
      OMEGT=OMEG1*OMEG2-XI1*XI2-ETA1*ETA2-ZETA1*ZETA2
      XIT=OMEG1*XI2+XI1*OMEG2-ETA1*ZETA2+ZETA1*ETA2
      ETAT=OMEG1*ETA2+XI1*ZETA2+ETA1*OMEG2-ZETA1*XI2
      ZETAT=OMEG1*ZETA2-XI1*ETA2+ETA1*XI2+ZETA1*OMEG2
      IF(OMEGT)3,5,5
    3 OMEGT=-OMEGT
      XIT=-XIT
      ETAT=-ETAT
      ZETAT=-ZETAT
C
C     INVERT CAYLEY-KLEIN PARAMETERS OBTAINING COMPOSITE ROTATION.
    5 THETT=2.*ACOS(OMEGT)
      AMT=(X/2.)-ACOS(ZETAT/SIN(THETT/2.))
      PHIT=ATAN(ETAT/XIT)
      IF(XIT)41,52,52
   41 IF(ETAT)42,43,43
   42 PHIT=PHIT-X
      GO TO 52
   43 PHIT=PHIT+X
C
C     INVERT TO DEGREES
   52 CONST=180./X
      AMT=AMT*CONST
      THETT=THETT*CONST
      PHIT=PHIT*CONST
      IF(AMT)7,12,12
    7 AMT=-AMT
      THETT=-THETT
      IF(PHIT)8,8,9
    8 PHIT=PHIT+180.
      GO TO 12
    9 PHIT=PHIT-180.
C
   12 CONTINUE
	RETURN
	END
	SUBROUTINE OLDADDER (EN,EO,EP,EQ,ER,ES,FT,FU,FM) 
C         IF (EP.EQ.-ES) GO TO 999
C         IF ((EP+ES.LE..01).AND.(EP+ES.GE.-.01)) GO TO 999
	IF ((ABS(EN-EQ).LT..5).OR.(ABS(EO-ER).LT..5)) GO TO 15
         R=57.29578 
         FN=EN/R 
         FO=EO/R 
         FP=EP/R 
         FR=ER/R 
         FS=ES/R 
         FQ=EQ/R 
         FA=COS(FP/2) 
         FB=SIN(FP/2)*SIN((90/R)-FN)*COS(FO) 
         FC=SIN(FP/2)*SIN((90/R)-FN)*SIN(FO) 
         FD=SIN(FP/2)*COS((90/R)-FN) 
         FE=COS(FS/2) 
         FF=SIN(FS/2)*SIN((90/R)-FQ)*COS(FR) 
         FG=SIN(FS/2)*SIN((90/R)-FQ)*SIN(FR) 
         FH=SIN(FS/2)*COS((90/R)-FQ) 
         FI=FA*FE-FB*FF-FC*FG-FD*FH 
         FJ=FA*FF+FB*FE-FC*FH+FD*FG 
         FK=FA*FG+FB*FH+FC*FE-FD*FF 
         FL=FA*FH-FB*FG+FC*FF+FD*FE 
         TEST=1.0-FI*FI
	TYPE*, 'SQRT VALUE = ',TEST, ' FI VALUE = ',FI
        IF((0.0.GE.TEST).AND.(TEST.GT.-.05)) GO TO 14
         ASIN=ATAN(FI/SQRT(TEST)) 
         ACOS=((3.14159/2.0-ASIN)*R) 
         FM=ACOS*2 
         IF(FM.GT.180.0) FM=FM-360.0 
10     CONTINUE
          IF (FM.EQ.0.0) GO TO 14
         FV=FL/SIN(FM/(2*R)) 
          TEST1=1.0-FV*FV
	TYPE*, 'SQRT VALUE = ',TEST1, ' FV VALUE = ',FV
          IF ((0.00000.GT.TEST1).AND.(TEST1.GT.-.05)) GO TO 11
         ASIN=ATAN(FV/SQRT(TEST1))
         ACOS=((3.14159/2.0-ASIN)*R) 
         FT=90.0-ACOS 
         GO TO 12
11         CONTINUE
            IF (FL.LT.0.0) FT=-90.
            IF (FL.GT.0.0) FT=90.
12           CONTINUE
         IF(FM.LT.0.0) FT=-FT 
         FU=ATAN2(FK,FJ)*R 
         IF(FU.GT.180.00) FU=FU-360.0 
C         TYPE *,FT,FU,FM 
         GO TO 20
15	CONTINUE
	FM=EP+ES
	FU=EO
	FT=EN		
	GO TO 20
14         CONTINUE
         FM=0.0
         FU=0.0
         FT=0.0
20         CONTINUE
         RETURN 
         END
